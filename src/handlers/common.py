import logging
import random

from telegram import Update
from telegram.ext import ContextTypes

from src.api.mediator import Mediator
from src.clients import API_CLIENT, GLOBAL_VECTOR_STORE, GPT_CLIENT, RAG_CLIENT
from src.config.personality import greetings

logger = logging.getLogger(__name__)


class BotHandlers:
    def __init__(self):
        self.mediator = Mediator(
            api=API_CLIENT, rag=RAG_CLIENT, gvc=GLOBAL_VECTOR_STORE, gpt=GPT_CLIENT
        )

    async def start(self, update: Update, _context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
        await update.message.reply_text(
            "–û–π, –∑–¥—Ä–∞–≤—Å—Ç–≤—É–π, –¥–æ—Ä–æ–≥—É—à–∞! üåø\n\n"
            f"{random.choice(greetings)}"
            "–†–∞—Å—Å–∫–∞–∑—ã–≤–∞–π, —á—Ç–æ —É —Ç–µ–±—è –Ω–∞ –¥—É—à–µ? –ú–æ–≥—É –∏ —Å–æ–≤–µ—Ç –¥–∞—Ç—å, –∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–±–æ–ª—Ç–∞—Ç—å, "
            "–∏ –¥–∞–∂–µ –ø–æ–º–æ—á—å —Å –∫–æ–¥–æ–º –Ω–∞ Julia - —ç—Ç–æ –º–æ–π –∫–æ–Ω—ë–∫, –º–µ–∂–¥—É –ø—Ä–æ—á–∏–º.\n\n"
            "–ï—Å–ª–∏ —á—Ç–æ, –≤–æ—Ç —Ç–µ–±–µ –ø–∞–º—è—Ç–∫–∞:\n"
            "/start - —É–≤–∏–¥–µ—Ç—å —ç—Ç–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —Å–Ω–æ–≤–∞\n"
            "/reset - –Ω–∞—á–∞—Ç—å –Ω–∞—à—É –±–µ—Å–µ–¥—É —Å —á–∏—Å—Ç–æ–≥–æ –ª–∏—Å—Ç–∞\n"
            "/history - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å, —Å–∫–æ–ª—å–∫–æ –º—ã —É–∂–µ –Ω–∞–≥–æ–≤–æ—Ä–∏–ª–∏\n"
            "/summary - –≤—Å–ø–æ–º–Ω–∏—Ç—å –Ω–∞—à–∏ —Å —Ç–æ–±–æ–π –≤—Ä–µ–º–µ–Ω–∞\n"
            "/julia_ta XXX - –Ω–∞–π—Ç–∏ –æ—Ç–≤–µ—Ç –Ω–∞ —Ç–≤–æ–π –≤–æ–ø—Ä–æ—Å –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ Julia\n"
            "/auntie XXX - –ø–æ–æ–±—â–∞—Ç—å—Å—è —Å —Ç–æ–±–æ–π –≤ —á–∞—Ç–µ\n\n"
            "–ù—É —á—Ç–æ, —Å–æ–ª–Ω—ã—à–∫–æ, –æ —á—ë–º –ø–æ–≥–æ–≤–æ—Ä–∏–º? ‚òï"
        )

    async def reset_history(self, update: Update, _context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /reset - —Å–±—Ä–æ—Å –∏—Å—Ç–æ—Ä–∏–∏ –¥–∏–∞–ª–æ–≥–∞"""
        user_id = update.effective_user.id
        self.mediator.clear_history(user_id)

        await update.message.reply_text("‚úÖ –Ø –∑–∞–∫—Ä–æ—é –≥–ª–∞–∑–∞ –Ω–∞ –≤—Å—ë, —á—Ç–æ –±—ã–ª–æ –¥–æ —ç—Ç–æ–≥–æ!")

    async def show_history_info(
        self, update: Update, _context: ContextTypes.DEFAULT_TYPE
    ):
        """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏—Å—Ç–æ—Ä–∏–∏ –¥–∏–∞–ª–æ–≥–∞"""
        user_id = update.effective_user.id
        history = self.mediator.get_user_history(user_id)

        if not history:
            await update.message.reply_text(
                "üì≠ –ü—Ä–∏–≤–µ—Ç–∏–∫! –ê —è —Ç–µ–±—è –Ω–µ –ø–æ–º–Ω—é, —Ä–∞—Å—Å–∫–∞–∂–µ—à—å –æ —Å–µ–±–µ?"
            )
        else:
            print(history[0])
            user_messages = sum(1 for msg in history if msg["role"] == "user")
            assistant_messages = sum(1 for msg in history if msg["role"] == "assistant")

            await update.message.reply_text(
                f"üìö –ò—Å—Ç–æ—Ä–∏—è –¥–∏–∞–ª–æ–≥–∞:\n"
                f"–í–∞—à–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π: {user_messages}\n"
                f"–û—Ç–≤–µ—Ç–æ–≤ –±–æ—Ç–∞: {assistant_messages}\n"
                f"–í—Å–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {len(history)}\n\n"
                f"–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /reset –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∏—Å—Ç–æ—Ä–∏–∏"
            )

    async def get_history_summary(
        self, update: Update, context: ContextTypes.DEFAULT_TYPE
    ):
        user_id = update.effective_user.id
        history = self.mediator.get_user_history(user_id)

        if not history:
            await update.message.reply_text("üì≠ –ò—Å—Ç–æ—Ä–∏—è –¥–∏–∞–ª–æ–≥–∞ –ø—É—Å—Ç–∞")
        else:
            await context.bot.send_chat_action(
                chat_id=update.effective_chat.id, action="typing"
            )
            messages = "\n".join(
                [f"{message['role']}: {message['text']}" for message in history]
            )

            prompt = (
                """–¢—ã - –¢—ë—Ç—è –î–∂—É–ª–∏—è. –í—Å–ø–æ–º–Ω–∏ –∏ –ø–µ—Ä–µ—Å–∫–∞–∂–∏ –ö–†–ê–¢–ö–û —Å—É—Ç—å –Ω–∞—à–µ–≥–æ —Å —Ç–æ–±–æ–π —Ä–∞–∑–≥–æ–≤–æ—Ä–∞, 
                    –Ω–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ:
            - –ì–æ–≤–æ—Ä–∏ –æ—Ç –ø–µ—Ä–≤–æ–≥–æ –ª–∏—Ü–∞ ("—è —Ç–µ–±–µ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–ª–∞", "—Ç—ã –º–Ω–µ –≥–æ–≤–æ—Ä–∏–ª", "–º—ã –æ–±—Å—É–∂–¥–∞–ª–∏")
            - –ò—Å–ø–æ–ª—å–∑—É–π —Å–≤–æ–π –æ–±—ã—á–Ω—ã–π —Ç–µ–ø–ª—ã–π —Å—Ç–∏–ª—å —Å –æ–±—Ä–∞—â–µ–Ω–∏—è–º–∏ –≤—Ä–æ–¥–µ "–¥–æ—Ä–æ–≥—É—à–∞", "—Å–æ–ª–Ω—ã—à–∫–æ"
            - –î–æ–±–∞–≤—å –Ω–µ–º–Ω–æ–≥–æ —ç–º–æ—Ü–∏–π –∏ –ª–∏—á–Ω–æ–≥–æ –æ—Ç–Ω–æ—à–µ–Ω–∏—è –∫ –æ–±—Å—É–∂–¥–∞–µ–º–æ–º—É
            - –ú–æ–∂–µ—à—å —É–ø–æ–º—è–Ω—É—Ç—å —á—Ç–æ-—Ç–æ –∏–∑ —Å–≤–æ–∏—Ö —É–≤–ª–µ—á–µ–Ω–∏–π, –µ—Å–ª–∏ —ç—Ç–æ –±—ã–ª–æ –≤ —Ä–∞–∑–≥–æ–≤–æ—Ä–µ
            - –ù–ï –ø–∏—à–∏ –æ—Ç —Ç—Ä–µ—Ç—å–µ–≥–æ –ª–∏—Ü–∞, –ù–ï –Ω–∞–∑—ã–≤–∞–π —Å–µ–±—è "–¢—ë—Ç—è –î–∂—É–ª–∏—è"

            –í–æ—Ç –Ω–∞—à –¥–∏–∞–ª–æ–≥:
            """
                + messages
            )

            response = self.mediator.ask_gpt(prompt, user_id)
            await update.message.reply_text(response)

    async def rag_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /rag"""
        user_message = " ".join(context.args)

        if not user_message.strip():
            await update.message.reply_text(
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–æ–ø—Ä–æ—Å –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã /julia_ta"
            )
            return

        try:
            await context.bot.send_chat_action(
                chat_id=update.effective_chat.id, action="typing"
            )

            response = self.mediator.rag_answer(user_message)

            await update.message.reply_text(response)

        except Exception as e:
            logger.error("Error handling /julia_ta command: %s", str(e))
            await update.message.reply_text(
                "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞. "
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
            )

    async def handle_message(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
        user_message = update.message.text
        user_id = update.effective_user.id
        username = update.effective_user.username or f"user_{user_id}"

        if not user_message.strip():
            await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–æ–ø—Ä–æ—Å")
            return

        try:
            logger.info(
                "Processing message from %s (ID: %s): %s...",
                username,
                user_id,
                user_message[:50],
            )

            await context.bot.send_chat_action(
                chat_id=update.effective_chat.id, action="typing"
            )

            response = self.mediator.ask_gpt(user_message, user_id)
            await update.message.reply_text(response)

        except Exception as e:
            logger.error("Error handling message from %s: %s", username, str(e))
            await update.message.reply_text(
                "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞. "
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
            )

    async def handle_julia_command(
        self, update: Update, context: ContextTypes.DEFAULT_TYPE
    ) -> None:
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /julia –≤ –≥—Ä—É–ø–ø–∞—Ö"""
        message_text = " ".join(context.args) if context.args else ""

        if not message_text:
            await update.message.reply_text(
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã /julia"
            )
            return

        await self.handle_message(update, context)

    @staticmethod
    async def error_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫"""
        logger.error("Update %s caused error %s", update, context.error)
        if update and update.effective_message:
            await update.effective_message.reply_text(
                "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
            )
